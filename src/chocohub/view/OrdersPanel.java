/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chocohub.view;

import chocohub.common.DBConnection;
import chocohub.common.IDGenerator;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ruzbihan
 */
public class OrdersPanel extends javax.swing.JPanel {

    /**
     * Creates new form OrdersPanel2
     */
    public OrdersPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mdlPanel = new org.jdesktop.swingx.JXPanel();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        txtfldOrderID = new org.jdesktop.swingx.JXTextField();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        txtfldUserName = new org.jdesktop.swingx.JXTextField();
        jXLabel3 = new org.jdesktop.swingx.JXLabel();
        txtfldDate = new org.jdesktop.swingx.JXTextField();
        jXLabel4 = new org.jdesktop.swingx.JXLabel();
        cmbItemCode = new javax.swing.JComboBox<>();
        jXLabel5 = new org.jdesktop.swingx.JXLabel();
        txtfldItemName = new org.jdesktop.swingx.JXTextField();
        jXLabel6 = new org.jdesktop.swingx.JXLabel();
        txtfldUnitPrice = new org.jdesktop.swingx.JXTextField();
        jXLabel7 = new org.jdesktop.swingx.JXLabel();
        spinnerQty = new javax.swing.JSpinner();
        btnAdd = new org.jdesktop.swingx.JXButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItem = new org.jdesktop.swingx.JXTable();
        btnRemoveRow = new org.jdesktop.swingx.JXButton();
        btnManageOrders = new org.jdesktop.swingx.JXButton();
        jXLabel8 = new org.jdesktop.swingx.JXLabel();
        txtfldTotal = new org.jdesktop.swingx.JXTextField();
        jXLabel9 = new org.jdesktop.swingx.JXLabel();
        txtfldCash = new org.jdesktop.swingx.JXTextField();
        jXLabel10 = new org.jdesktop.swingx.JXLabel();
        txtfldBalance = new org.jdesktop.swingx.JXTextField();
        btnSave = new org.jdesktop.swingx.JXButton();

        mdlPanel.setMinimumSize(new java.awt.Dimension(100, 100));

        jXLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel1.setText("Order ID");
        jXLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jXLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel2.setText("User Name");
        jXLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jXLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel3.setText("Date");
        jXLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jXLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel4.setText("ItemCode");
        jXLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        cmbItemCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbItemCodeActionPerformed(evt);
            }
        });

        jXLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel5.setText("Item Name");
        jXLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jXLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel6.setText("Unit Price");
        jXLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jXLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel7.setText("Qty");
        jXLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        spinnerQty.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        spinnerQty.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                spinnerQtyAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        btnAdd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 0), 2));
        btnAdd.setForeground(new java.awt.Color(51, 0, 0));
        btnAdd.setText("Add");
        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        tblItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Item Name", "Unit Price", "Qty", "Net"
            }
        ));
        tblItem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tblItem.setSelectionBackground(new java.awt.Color(51, 0, 0));
        jScrollPane1.setViewportView(tblItem);

        btnRemoveRow.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 0), 2));
        btnRemoveRow.setForeground(new java.awt.Color(51, 0, 0));
        btnRemoveRow.setText("Remove Row");
        btnRemoveRow.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnRemoveRow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRemoveRowMouseClicked(evt);
            }
        });

        btnManageOrders.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 0), 2));
        btnManageOrders.setForeground(new java.awt.Color(51, 0, 0));
        btnManageOrders.setText("Manage Orders");
        btnManageOrders.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnManageOrders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnManageOrdersMouseClicked(evt);
            }
        });

        jXLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel8.setText("Total");
        jXLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jXLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel9.setText("Cash");
        jXLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        txtfldCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldCashActionPerformed(evt);
            }
        });
        txtfldCash.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfldCashKeyReleased(evt);
            }
        });

        jXLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXLabel10.setText("Balance");
        jXLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        btnSave.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 0), 2));
        btnSave.setForeground(new java.awt.Color(51, 0, 0));
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chocohub/images/Save 2.png"))); // NOI18N
        btnSave.setText("Save & Print");
        btnSave.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mdlPanelLayout = new javax.swing.GroupLayout(mdlPanel);
        mdlPanel.setLayout(mdlPanelLayout);
        mdlPanelLayout.setHorizontalGroup(
            mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mdlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mdlPanelLayout.createSequentialGroup()
                        .addGroup(mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mdlPanelLayout.createSequentialGroup()
                                .addGroup(mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(mdlPanelLayout.createSequentialGroup()
                                        .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtfldOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(mdlPanelLayout.createSequentialGroup()
                                        .addComponent(jXLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cmbItemCode, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jXLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jXLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)))
                            .addGroup(mdlPanelLayout.createSequentialGroup()
                                .addComponent(jXLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtfldUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jXLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mdlPanelLayout.createSequentialGroup()
                                .addGroup(mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtfldUserName, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                                    .addComponent(txtfldItemName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jXLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(spinnerQty, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtfldDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)))
                    .addGroup(mdlPanelLayout.createSequentialGroup()
                        .addGroup(mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnRemoveRow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnManageOrders, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mdlPanelLayout.createSequentialGroup()
                                .addComponent(jXLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtfldCash, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(mdlPanelLayout.createSequentialGroup()
                                .addComponent(jXLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtfldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(50, 50, 50)
                        .addGroup(mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(mdlPanelLayout.createSequentialGroup()
                                .addComponent(jXLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtfldBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        mdlPanelLayout.setVerticalGroup(
            mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mdlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtfldUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtfldDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtfldOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfldItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfldUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemoveRow, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jXLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtfldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jXLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtfldBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mdlPanelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(mdlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jXLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtfldCash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(mdlPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnManageOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mdlPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mdlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mdlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbItemCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbItemCodeActionPerformed
        if (cmbItemCode.getSelectedIndex() != -1) {
            searchItemByCode(cmbItemCode.getSelectedItem().toString());
            spinnerQty.requestFocus();
        }
    }//GEN-LAST:event_cmbItemCodeActionPerformed

    private void spinnerQtyAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_spinnerQtyAncestorAdded
        addItemToTable();
    }//GEN-LAST:event_spinnerQtyAncestorAdded

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        addItemToTable();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveRowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveRowMouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblItem.getModel();
        dtm.removeRow(tblItem.getSelectedRow());
    }//GEN-LAST:event_btnRemoveRowMouseClicked

    private void btnManageOrdersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnManageOrdersMouseClicked
        ManageOrders mg = new ManageOrders(MainFrame.mainFrame, true);
        mg.setVisible(true);
        loadComboBox();
    }//GEN-LAST:event_btnManageOrdersMouseClicked

    private void txtfldCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldCashActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldCashActionPerformed

    private void txtfldCashKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfldCashKeyReleased
        double cash = Double.parseDouble(txtfldCash.getText());
        double amount = Double.parseDouble(txtfldTotal.getText());
        if (cash > amount) {
            btnSave.setEnabled(true);
            txtfldBalance.setText(Double.toString(cash - amount));
        }
    }//GEN-LAST:event_txtfldCashKeyReleased

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            Connection conn = DBConnection.getInstance().getConnection();
            Statement st = conn.createStatement();

            //add order into the database (orders table)
            String orderID = txtfldOrderID.getText();
            String userName = txtfldUserName.getText();
            String date = txtfldDate.getText().toString();
            Double amount = Double.parseDouble(txtfldTotal.getText());

            String SQL = "insert into orders (orderID, userName, date,orderAmount) values ('" + orderID + "','" + userName + "','" + date + "', " + amount + ");";
            int res = st.executeUpdate(SQL);

            //update choc table in the database
            if (res > 0) {
                JOptionPane.showMessageDialog(this, "Successfully Added");
                txtfldTotal.setText(null);
                txtfldCash.setText(null);
                txtfldBalance.setText(null);
                spinnerQty.setValue(0);
                getNewOrderID();
                DefaultTableModel dtm = (DefaultTableModel) tblItem.getModel();
                dtm.setRowCount(0);
                loadComboBox();
            }
            //add order details from the table into database (order details table)
            for (int i = 0; i < tblItem.getRowCount(); i++) {
                String itemCode = tblItem.getStringAt(i, 0);
                String itemName = tblItem.getStringAt(i, 1);
                double unitPrice = Double.parseDouble(tblItem.getStringAt(i, 2));
                int qty = Integer.parseInt(tblItem.getStringAt(i, 3));

                String SQL2 = "insert into orderdetails values('" + orderID + "','" + itemCode + "','" + qty + "','" + unitPrice + "')";
                int res2 = st.executeUpdate(SQL2);
                if (res2 < 0) {
                    JOptionPane.showMessageDialog(this, "Failed");
                    return;
                }
            }

        } catch (SQLException ex) {
            Logger.getLogger(OrdersPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(OrdersPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton btnAdd;
    private org.jdesktop.swingx.JXButton btnManageOrders;
    private org.jdesktop.swingx.JXButton btnRemoveRow;
    private org.jdesktop.swingx.JXButton btnSave;
    private javax.swing.JComboBox<String> cmbItemCode;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel jXLabel10;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXLabel jXLabel3;
    private org.jdesktop.swingx.JXLabel jXLabel4;
    private org.jdesktop.swingx.JXLabel jXLabel5;
    private org.jdesktop.swingx.JXLabel jXLabel6;
    private org.jdesktop.swingx.JXLabel jXLabel7;
    private org.jdesktop.swingx.JXLabel jXLabel8;
    private org.jdesktop.swingx.JXLabel jXLabel9;
    private org.jdesktop.swingx.JXPanel mdlPanel;
    private javax.swing.JSpinner spinnerQty;
    private org.jdesktop.swingx.JXTable tblItem;
    private org.jdesktop.swingx.JXTextField txtfldBalance;
    private org.jdesktop.swingx.JXTextField txtfldCash;
    private org.jdesktop.swingx.JXTextField txtfldDate;
    private org.jdesktop.swingx.JXTextField txtfldItemName;
    private org.jdesktop.swingx.JXTextField txtfldOrderID;
    private org.jdesktop.swingx.JXTextField txtfldTotal;
    private org.jdesktop.swingx.JXTextField txtfldUnitPrice;
    private org.jdesktop.swingx.JXTextField txtfldUserName;
    // End of variables declaration//GEN-END:variables

    private void loadComboBox() {
        cmbItemCode.removeAllItems();
        try {
            String SQL = "select * from choc";
            Connection conn = DBConnection.getInstance().getConnection();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(SQL);

            if (rs == null) {
                return;
            }

            while (rs.next()) {
                cmbItemCode.addItem(rs.getString("chocCode"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(ItemsPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ItemsPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void addItemToTable() {
        String itemCode = cmbItemCode.getSelectedItem().toString();
        String itemName = txtfldItemName.getText();
        double unitPrice = Double.parseDouble(txtfldUnitPrice.getText());
        int qty = Integer.parseInt(spinnerQty.getValue().toString());

        DefaultTableModel dtm = (DefaultTableModel) tblItem.getModel();

        if (cmbItemCode.getSelectedIndex() != -1) {
            for (int i = 0; i < tblItem.getRowCount(); i++) {
                if (itemCode.equals((String) tblItem.getValueAt(i, 0))) {
                    int oldQty = Integer.parseInt(tblItem.getValueAt(i, 3).toString());
                    tblItem.setValueAt((qty + oldQty), i, 3);
                    double net = (qty + oldQty) * unitPrice;
                    tblItem.setValueAt(net, i, 4);
                    calculateTotalAmount();
                    spinnerQty.setValue(0);
                    return;
                }

            }
            Object[] rawData = {itemCode, itemName, unitPrice, qty, (qty * unitPrice)};
            dtm.addRow(rawData);
            calculateTotalAmount();
            spinnerQty.setValue(0);

        }

    }

    private void calculateTotalAmount() {
        double amount = 0;
        for (int i = 0; i < tblItem.getRowCount(); i++) {
            amount += (double) (tblItem.getValueAt(i, 4));
        }
        txtfldTotal.setText(Double.toString(amount));
    }

    private void searchItemByCode(String chocCode) {
        try {
            String SQL = "select * from choc where chocCode='" + chocCode + "';";
            Connection conn = DBConnection.getInstance().getConnection();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(SQL);

            if (rs.next()) {
                cmbItemCode.setSelectedItem(chocCode);
                txtfldItemName.setText(rs.getString("chocName"));
                txtfldUnitPrice.setText(rs.getString("unitPrice"));
            } else {
                JOptionPane.showMessageDialog(this, "Choc Not Available..");
            }
        } catch (SQLException ex) {
            Logger.getLogger(ItemsPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ItemsPanel.class.getName()).log(Level.SEVERE, null, ex);

        }
    }

    private void getNewOrderID() {
        String newID;
        try {
            newID = IDGenerator.getNewID("orders", "orderID", "OD");
            txtfldOrderID.setText(newID);
        } catch (SQLException ex) {
            Logger.getLogger(OrdersPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(OrdersPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
